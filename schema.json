{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/open-rpc/meta-schema/master/schema.json",
  "type": "object",
  "required": [
    "info",
    "methods",
    "openrpc"
  ],
  "additionalProperties": false,
  "properties": {
    "openrpc": {
      "title": "openrpc",
      "type": "string",
      "enum": ["GENERATED FIELD: Do Not Edit"]
    },
    "info": {
      "$ref": "#/definitions/infoObject"
    },
    "servers": {
      "title": "servers",
      "type": "array",
      "additionalItems": false,
      "items": {
        "$ref": "#/definitions/serverObject"
      }
    },
    "methods": {
      "title": "methods",
      "type": "array",
      "additionalItems": false,
      "items": {
        "$ref": "#/definitions/methodObject"
      }
    },
    "components": {
      "title": "components",
      "type": "object",
      "properties": {
        "schemas": {
          "title": "schemas",
          "type": "object",
          "patternProperties": {
            "[0-z]+": {
              "$ref": "#/definitions/schema"
            }
          }
        },
        "links": {
          "title": "links",
          "type": "object",
          "patternProperties": {
            "[0-z]+": {
              "$ref": "#/definitions/linkObject"
            }
          }
        },
        "examples": {
          "title": "examples",
          "type": "object",
          "patternProperties": {
            "[0-z]+": {
              "$ref": "#/definitions/exampleObject"
            }
          }
        },
        "examplePairings": {
          "title": "examplePairings",
          "type": "object",
          "patternProperties": {
            "[0-z]+": {
              "$ref": "#/definitions/examplePairingObject"
            }
          }
        },
        "contentDescriptors": {
          "title": "contentDescriptors",
          "type": "object",
          "patternProperties": {
            "[0-z]+": {
              "oneOf": [
                {
                  "$ref": "#/definitions/contentDescriptorObject"
                },
                {
                  "$ref": "#/definitions/referenceObject"
                }
              ]
            }
          }
        },
        "tags": {
          "title": "tags",
          "type": "object",
          "patternProperties": {
            "[0-z]+": {
              "$ref": "#/definitions/tagObject"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "schema": {
      "title": "schema",
      "$ref": "https://json-schema.org/draft-07/schema#",
      "default": {}
    },
    "referenceObject": {
      "title": "referenceObject",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "$ref"
      ],
      "properties": {
        "$ref": {
          "title": "$ref",
          "type": "string",
          "format": "uri-reference"
        }
      }
    },
    "errorObject": {
      "title": "errorObject",
      "type": "object",
      "description": "Defines an application level error.",
      "additionalProperties": false,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "title": "errorCode",
          "description": "A Number that indicates the error type that occurred. This MUST be an integer. The error codes from and including -32768 to -32000 are reserved for pre-defined errors. These pre-defined errors SHOULD be assumed to be returned from any JSON-RPC api.",
          "type": "integer"
        },
        "message": {
          "title": "errorMessage",
          "description": "A String providing a short description of the error. The message SHOULD be limited to a concise single sentence.",
          "type": "string"
        },
        "data": {
          "title": "errorData",
          "description": "A Primitive or Structured value that contains additional information about the error. This may be omitted. The value of this member is defined by the Server (e.g. detailed error information, nested errors etc.)."
        }
      }
    },
    "licenseObject": {
      "title": "licenceObject",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "title": "licenseName",
          "type": "string"
        },
        "url": {
          "title": "licenseUrl",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": { "title": "vendorExtensionObject" }
      }
    },
    "contactObject": {
      "title": "contactObject",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "title": "contactName",
          "type": "string"
        },
        "email": {
          "title": "contactEmail",
          "type": "string"
        },
        "url": {
          "title": "contactUrl",
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": { "title": "vendorExtensionObject" }
      }
    },
    "infoObject": {
      "title": "infoObject",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "title",
        "version"
      ],
      "properties": {
        "title": {
          "title": "infoTitle",
          "type": "string"
        },
        "description": {
          "title": "infoDescription",
          "type": "string"
        },
        "termsOfService": {
          "title": "infoTermsOfService",
          "type": "string",
          "format": "uri"
        },
        "version": {
          "title": "infoVersion",
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/contactObject"
        },
        "license": {
          "$ref": "#/definitions/licenseObject"
        }
      },
      "patternProperties": {
        "^x-": { "title": "vendorExtensionObject" }
      }
    },
    "serverObject": {
      "title": "serverObject",
      "type": "object",
      "required": [
        "url"
      ],
      "additionalProperties": false,
      "properties": {
        "url": {
          "title": "serverUrl",
          "type": "string",
          "format": "uri"
        },
        "name": {
          "title": "serverName",
          "type": "string"
        },
        "description": {
          "title": "serverDescription",
          "type": "string"
        },
        "summary": {
          "title": "serverSummary",
          "type": "string"
        },
        "variables": {
          "title": "serverVariablesObject",
          "type": "object",
          "patternProperties": {
            "[0-z]+": {
              "title": "serverVariableObject",
              "type": "object",
              "required": [
                "default"
              ],
              "properties": {
                "default": {
                  "title": "serverVariableDefault",
                  "type": "string"
                },
                "description": {
                  "title": "serverVariableDescription",
                  "type": "string"
                },
                "enum": {
                  "title": "serverVariableEnumList",
                  "type": "array",
                  "items": {
                    "title": "serverVariableEnumValue",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      }
    },
    "linkObject": {
      "title": "linkObject",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "title": "linkName",
          "type": "string",
          "minLength": 1
        },
        "summary": {
          "title": "linkSummary",
          "type": "string"
        },
        "method": {
          "title": "linkMethod",
          "type": "string"
        },
        "description": {
          "title": "linkDescription",
          "type": "string"
        },
        "params": {
          "title": "linkParams"
        },
        "server": {
          "$ref": "#/definitions/serverObject"
        }
      },
      "patternProperties": {
        "^x-": { "title": "vendorExtensionObject" }
      }
    },
    "externalDocumentationObject": {
      "title": "externalDocumentationObject",
      "type": "object",
      "additionalProperties": false,
      "description": "information about external documentation",
      "required": [
        "url"
      ],
      "properties": {
        "description": {
          "title": "externalDocumentationDescription",
          "type": "string"
        },
        "url": {
          "title": "externalDocumentationUrl",
          "type": "string",
          "format": "uri"
        }
      },
      "patternProperties": {
        "^x-": { "title": "vendorExtensionObject" }
      }
    },
    "methodObject": {
      "title": "methodObject",
      "type": "object",
      "required": [
        "name",
        "result",
        "params"
      ],
      "additionalProperties": false,
      "properties": {
        "name": {
          "title": "methodName",
          "description": "The cannonical name for the method. The name MUST be unique within the methods array.",
          "type": "string",
          "minLength": 1
        },
        "description": {
          "title": "methodDescription",
          "description": "A verbose explanation of the method behavior. GitHub Flavored Markdown syntax MAY be used for rich text representation.",
          "type": "string"
        },
        "summary": {
          "title": "methodSummary",
          "description": "A short summary of what the method does.",
          "type": "string"
        },
        "tags": {
          "title": "methodTags",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/tagObject"
              },
              {
                "$ref": "#/definitions/referenceObject"
              }
            ]
          }
        },
        "paramStructure": {
          "title": "methodParamStructure",
          "type": "string",
          "description": "Format the server expects the params. Defaults to 'by-positon'.",
          "enum": [
            "by-position",
            "by-name"
          ],
          "default": "by-position"
        },
        "params": {
          "title": "methodParams",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/contentDescriptorObject"
              },
              {
                "$ref": "#/definitions/referenceObject"
              }
            ]
          }
        },
        "result": {
          "title": "methodResult",
          "oneOf": [
            {
              "$ref": "#/definitions/contentDescriptorObject"
            },
            {
              "$ref": "#/definitions/referenceObject"
            }
          ]
        },
        "errors": {
          "title": "methodErrors",
          "description": "Defines an application level error.",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/errorObject"
              },
              {
                "$ref": "#/definitions/referenceObject"
              }
            ]
          }
        },
        "links": {
          "title": "methodLinks",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/linkObject"
              },
              {
                "$ref": "#/definitions/referenceObject"
              }
            ]
          }
        },
        "examples": {
          "title": "methodExamples",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/examplePairingObject"
              },
              {
                "$ref": "#/definitions/referenceObject"
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^x-": { "title": "vendorExtensionObject" }
      }
    },
    "tagObject": {
      "title": "tagObject",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "title": "tagName",
          "type": "string",
          "minLength": 1
        },
        "description": {
          "title": "tagDescription",
          "type": "string"
        },
        "externalDocs": {
          "$ref": "#/definitions/externalDocumentationObject"
        }
      },
      "patternProperties": {
        "^x-": { "title": "vendorExtensionObject" }
      }
    },
    "exampleObject": {
      "title": "exampleObject",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "summary": {
          "title": "exampleSummary",
          "type": "string"
        },
        "value": {
          "title": "exampleValue"
        },
        "description": {
          "title": "exampleDescription",
          "type": "string"
        },
        "name": {
          "title": "exampleName",
          "type": "string",
          "minLength": 1
        }
      },
      "patternProperties": {
        "^x-": { "title": "vendorExtensionObject" }
      }
    },
    "examplePairingObject": {
      "title": "examplePairingObject",
      "type": "object",
      "required": [
        "name",
        "params",
        "result"
      ],
      "properties": {
        "name": {
          "title": "examplePairingType",
          "type": "string",
          "minLength": 1
        },
        "description": {
          "title": "examplePairingDescription",
          "type": "string"
        },
        "params": {
          "title": "examplePairingParams",
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/exampleObject"
              },
              {
                "$ref": "#/definitions/referenceObject"
              }
            ]
          }
        },
        "result": {
          "title": "examplePairingResult",
          "oneOf": [
            {
              "$ref": "#/definitions/exampleObject"
            },
            {
              "$ref": "#/definitions/referenceObject"
            }
          ]
        }
      }
    },
    "contentDescriptorObject": {
      "title": "contentDescriptorObject",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name",
        "schema"
      ],
      "properties": {
        "name": {
          "title": "contentDescriptorName",
          "type": "string",
          "minLength": 1
        },
        "description": {
          "title": "contentDescriptorDescription",
          "type": "string"
        },
        "summary": {
          "title": "contentDescriptorSummary",
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/schema"
        },
        "required": {
          "title": "contentDescriptorRequired",
          "type": "boolean"
        }
      },
      "patternProperties": {
        "^x-": { "title": "vendorExtensionObject" }
      }
    }
  }
}
